# server블록은 최소 하나이상 존재해야합니다.
server
{
	listen 127.0.0.1:8080
	#설명 : listen 127.0.0.1 ,listen 100, listen 127.0.0.1:100

	#error_page 300 405 304 404 /default_error_page.html
	#설명 : 300 ~ 599까지 에러코드 사용가능
	#설명 : DEFAULT_HTML_PATH + /error_page_404.html 경로가 열립니다.

	# loacation 블록은 최소 하나이상 존재해야합니다. (디폴트서버)


	location /						
	{
		#설명 : 아래 기능들은 모두 사용가능합니다.
		error_page 404 /error_page_404.html
		allow_methods GET POST DELETE
		client_max_body_size 2048M
		root ./html_file
		index index.html upload_hoylee.html 
		auto_index on
		#server_max_body_size 0M 
		return 301 https://www.naver.com

		#######################################################################################################################
		### 1. error_page : 300 ~ 599의 상태코드인 경우, 대체할 페이지를 지정할 수 있습니다.							    ###
		###		1-1. 대체할 지정 파일경로는 DEFAULT_HTML_PATH 입니다.														###
		###		1-2. server block의 error_page와 location block에 error_page가 있으면 location의 error_page만 동작합니다.	###
		###		1-3. return 이 있는경우 리다이렉션만 진행됩니다.															###
		### 2. allow_methods : 허용가능한 메소드를 지정합니다.																###
		###		2-1. 해당 헤더가 없으면 GET POST 허용됩니다.													###
		###		2-2. 허용하지 않은 메소드 요청시 405 에러를 띄웁니다.														###
		### 3. client_max_body_size : 서버로 오는 요청하는 content-length를 제한합니다.										###
		###		3-1. 헤더가 없으면 기본 사이즈는 1MB입니다.																	###
		###		3-2. client_max_body_size 30 또는 client_max_body_size 30M 형식으로 사용가능합니다.							###
		###		3-3. 해당사이즈보다 작으면 413에러를 띄웁니다.																###
		###		3-4. 최대 2048까지 설정이 가능합니다.																		###
		### 4. root : 해당 location의 root 폴더를 지정합니다.																###
		###		4-1. 설정하지 않으면 해당 location block의 root 는 DEFAULT_HTML_PATH 입니다.								###
		### 5. index : location block에 접속했을때 반환해줄 파일을 설정합니다.												###
		###		5-1. 여러개 설정 가능합니다.  ex) index index.html aaa.html test.html										###
		###		5-2. 설정한 파일중 앞에서 부터 검사하며 일치하는게 있으면 해당 파일을 응답해줍니다.							###
		###		5-3. index설정한 파일 경로는 root + (url - location_path) + index 입니다.									###
		### 6. auto_index : 요청한 파일이 없을 경우, 해당 폴더의 리스트를 반환합니다.										###
		###		6-1. root + (url - location_path) 경로의 리스트를 띄웁니다.													###
		###		6-2. on 또는 off 설정이 가능하며 on 인 경우 동작 ex)auto_index on											###
		### 7. server_max_body_size : 응답해줄 content-length를 제한합니다.													###
		###		7-1. client_max_body_size와 사용법이 동일합니다.															###
		#######################################################################################################################

		# 아래 지워야할것!
		#auth_key hyeonskizzangzzangman:1234 지워야함.
		#client_body_buffer_size 1000M #이렇게 올수도 있음.
		#upload_path /tmp/
		#cgi_path_info : 구현안됨. 말봉님 코드에는 있는데, nginx 공홈에는 없음. 
	}
	location /0 # index파일 GET, POST요청 
	{
		root ./html_file
		index index.html upload_hoylee.html
		client_max_body_size 10M
#	server_max_body_size 0
	}
	location /1 # GET요청시 405
	{
		allow_methods POST DELETE
		root ./html_file
		index index.html upload_hoylee.html
	}
	location /2 #정상처리
	{
		root ./html_file
		index post_test.html get_test.html index.html upload_hoylee.html
	}
	location /3 #폴더경로로 접속시 일치하는 none.html이 없으므로 403, 파일이면 404
	{
		root ./html_file
		index none.html 
	}
	location /4 #autoindex 사용, 해당 경로일때만 작동. 파일url은 404에러!
	{
		root ./html_file
		index none.html
		auto_index on
	}
	location /5 #root경로 이상할때
	{
		root ./html_fileaaaaaa
		index none.html
		auto_index on
	}
	location /6 #아무것도 없으면?
	{
		#root ./html_file 없을때 기본설정
		#index index.html 없을떄 기본설정
	}
	location /7 #리다이렉션 naver로!
	{
		root ./html_fileaaaaaa
		index none.html
		return 301 https://www.naver.com
	}
	location /8
	{
		root ./html_file
		index index_third.html
	}
	location /9 #DELETE 
	{
		allow_methods GET POST DELETE
		root ./html_file
	}
	location /cgi-bin/ #php파일 작동경로
	{
		client_max_body_size 10M
		root ./cgi-bin/
	}
	location /10
	{
		root ./html_file
		index index_second.html
	}
	location /11
	{
		root ./html_file
		index upload_hoylee.html
	}

	location /abcd/efgh/
	{
		root ./test/www/
		index index.html
	}

	location /2////
	{
		root ./html_file
		index index2.html
		auto_index on
		auth_key juyangzzangzzangman:1234
	}

	location /virtual//siej///iowej
	{
		root ./tests/www/
		auth_key kileezzangzzangman:1234
	}

	location v
	{
		allow_methods GET POST DELETE
		root ./tests/www/tmp/
#client_body_buffer_size 0
		auth_key jayunzzangzzangman:1234
	}

	location /post/tmp/
	{
		allow_methods GET POST DELETE
		root ./test/www/tmp/
	}

	location /index/
	{
		root ./tests/www/
		return 301 https://www.naver.com
	}
}

server
{
#	server_name special_server
	#listen 8180 127.0.0.1
	listen 127.0.0.1
	listen 8180

	location /
	{
		#root ./tests/www/
		#index second.html
		root ./html_file
		index index_second.html
	}

	location /1
	{
		root ./html_file
		index index.html
	}

	location /cgi-bin/
	{
		root ./cgi-bin/
	}
}

server
{
#	server_name google.com
	#listen 8182 127.0.0.1
	listen 127.0.0.1
	listen 8182

	location /
	{
		#root ./tests/www/
		#index google.html
		root ./html_file
		index index_third.html

	}
	location /cgi-bin/
	{
		root ./cgi-bin/
	}
}
